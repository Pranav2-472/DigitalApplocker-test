package com.digitalapps.digitalapplocker;

/*
*
* This is the config class. This stores the configuration for service thread so that it knows what app to block.
* It gets generated by a Configuration Parser from scratch or from an existing XML file.
* The settings for each app is changed from AppSettings(activity). It uses this object to write those changes.
* It also handles XML file by telling the parser to re-write the file when sync() is called.
*/

import java.lang.reflect.Array;
import java.util.ArrayList;

public class Config {
    private ArrayList<App> apps;
    private String masterpwd;
    public Config(ArrayList<App> apps, String masterpwd) {
        this.apps=apps;

        if(masterpwd!=null && !masterpwd.equals(""))
            this.masterpwd=masterpwd;
        else
            this.masterpwd="";
    }
    //returns the master password.
    public String getMasterpwd() {
        return masterpwd;
    }

    //sets the master password.
    public void setMasterpwd(String pwd) {
        if(pwd!=null)
            this.masterpwd=""+pwd;
        else
            this.masterpwd="";
    }
    //returns list of apps in this object.
    public ArrayList<App> getApps() {
        return apps;
    }

    //returns the app identified by the name given.
    public App getApp(String name) {
        for(App app : apps) {
            if(app.name().equals(name))
                return app;
        }
        return null;
    }

    //remove the app identified by the name given.
    public void removeApp(String name) {
        for(App app : apps) {
            if(app.name().equals(name)) {
                apps.remove(app);
                ConfigParser.currentInstance.writeConfig(this);
                return;
            }
        }
    }

    //adds a new app to the list.
    public App createNewAppConfig(String packagename) {
        for(App app : apps) {
            if(app.name().equals(packagename))
                return null;
        }
        App app = new App(packagename,new App.TimeSet(0),new App.TimeSet(0), 0,null);
        apps.add(app);
        ConfigParser.currentInstance.writeConfig(this);
        return app;
    }

    //performs sync to write to the XML file.
    public void sync() {
        ConfigParser.currentInstance.writeConfig(this);
    }
}
